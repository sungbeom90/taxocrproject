<type>:<title> #제목(필수)

# 제목 구조 (파츠 들)
# [타입: 동작 #번호 - 요약내용] '[]'는 생략 
# [타입]은 아래 list 참고
# [동작]은 동사원형 (ex : Add, Modfiy, Delete,..)
# [번호]는 이슈번호 이슈가 아니라면 생략가능 (github 확인하여 적용)
# [요약내용]은 한눈에 알아볼 수 있게
#
# 0.제목과 본문사이 빈줄 추가 (중요)
# 1.제목은 모두 영어단어로 작성
# 2.각 파츠마다 첫단어는 대문자로
# 3.제목은 모두 합쳐 50자 이내로
# 4.제목 끝에 마침표 '.' 금지
# 5.제목은 명령조로 작성
#
# <type> list
# Feat : 새로운 기능 추가
# Fix : 버그 수정
# Docs : 문서 수정
# Style : 코드 포맷 변경, 세미 콜론 누락, 코드의 동작수정이 없는 경우
# Refactor : 프로덕션 코드 리팩터링 (외부동작은 동일, 내부구조 개선)
# Test : 테스트 추가, 테스트 리팩터링
# Etc : 기타 변경사항
#
# --------------------------------------------------------
#
<description> #본문 (생략가능)
#
# 본문의 길이는 한 줄당 60글자 내외에서 줄 바꿈. 한글로 간단 명료하게 작성
# 어떻게(How) 보다는 무엇을(What), 왜(Why) 변경했는지를 작성할 것
#
# --------------------------------------------------------
#
<keyword> <issue-number> #꼬릿말 (생략가능)
#
# 꼬릿말 구조 (파츠 들)
# [키워드 #번호] '[]'는 생략 
# [키워드]는 아래 list 참고, 기능차이는 없고 맥락에 맞게 사용
# [번호]는 제목의 대표이슈를 제외한 연관 이슈 첨부, 여러 개 추가 가능
#
# <keyword> list
# close : 일반 개발 이슈 (아래도 같음)
# closes
# closed
# fix : 버그픽스나 핫 픽스 이슈 (아래도 같음)
# fixes
# fixed
# resolve : 문의나 요청사항에 대응한 이슈 (아래도 같음)
# resolves
# resolved
# --------------------------------------------------------